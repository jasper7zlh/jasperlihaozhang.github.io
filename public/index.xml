<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lihao (Jasper) Zhang</title>
    <link>/</link>
    <description>Recent content on Lihao (Jasper) Zhang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 23 Mar 2019 19:35:27 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Sat, 23 Mar 2019 19:35:27 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Lihao (Jasper) Zhang was borned in Northern China, he growed up in Shandong province with great interests in machine learning, traveling and sports of various kinds including billiards (8 ball &amp;amp; 9 ball), NBA basketball, table tennis and badminton. After three years of FinTech industry experience at Los Angeles, traveling across 15+ U.S national parks and two years&amp;rsquo; study to get his MS degree in Statistics from The University of Texas at Austin, Lihao is now a data scientist in the tech consulting area at Shanghai in China.</description>
    </item>
    
    <item>
      <title>Finding Donors</title>
      <link>/miscellaneous/finding_donors/</link>
      <pubDate>Wed, 18 Apr 2018 11:52:13 -0400</pubDate>
      
      <guid>/miscellaneous/finding_donors/</guid>
      <description>Supervised Learning Project: Finding Donors for CharityML Getting Started In this project, you will employ several supervised algorithms of your choice to accurately model individuals&amp;rsquo; income using data collected from the 1994 U.S. Census. You will then choose the best candidate algorithm from preliminary results and further optimize this algorithm to best model the data. Your goal with this implementation is to construct a model that accurately predicts whether an individual makes more than $50,000.</description>
    </item>
    
    <item>
      <title>Finding Donors</title>
      <link>/projects/finding_donors/</link>
      <pubDate>Wed, 18 Apr 2018 11:52:13 -0400</pubDate>
      
      <guid>/projects/finding_donors/</guid>
      <description>Supervised Learning Project: Finding Donors for CharityML Getting Started In this project, you will employ several supervised algorithms of your choice to accurately model individuals&amp;rsquo; income using data collected from the 1994 U.S. Census. You will then choose the best candidate algorithm from preliminary results and further optimize this algorithm to best model the data. Your goal with this implementation is to construct a model that accurately predicts whether an individual makes more than $50,000.</description>
    </item>
    
    <item>
      <title>Boston Housing</title>
      <link>/projects/boston_housing/</link>
      <pubDate>Sun, 18 Mar 2018 22:28:13 -0400</pubDate>
      
      <guid>/projects/boston_housing/</guid>
      <description>Model Evaluation &amp;amp; Validation Project: Predicting Boston Housing Prices Getting Started In this project, you will evaluate the performance and predictive power of a model that has been trained and tested on data collected from homes in suburbs of Boston, Massachusetts. A model trained on this data that is seen as a good fit could then be used to make certain predictions about a home â€” in particular, its monetary value.</description>
    </item>
    
    <item>
      <title>Exploratory Analysis with MovieLens Data</title>
      <link>/blog/netflix_movie_recommendations/</link>
      <pubDate>Wed, 21 Feb 2018 22:28:13 -0400</pubDate>
      
      <guid>/blog/netflix_movie_recommendations/</guid>
      <description>1. Load Data into Pandas Dataframe import pandas as pd import numpy as np # pass in column names for each CSV and read them using pandas. # Column names available in the readme file # Reading users file: u_cols = [&#39;user_id&#39;, &#39;age&#39;, &#39;sex&#39;, &#39;occupation&#39;, &#39;zip_code&#39;] users = pd.read_csv(&#39;ml-100k/u.user&#39;, sep = &#39;|&#39;, names = u_cols, encoding = &#39;latin-1&#39;) # Reading ratings file: r_cols = [&#39;user_id&#39;, &#39;movie_id&#39;, &#39;rating&#39;, &#39;unix_timestamp&#39;] ratings = pd.</description>
    </item>
    
  </channel>
</rss>